#!/bin/sh

# disable sleep on lid close
# https://unix.stackexchange.com/questions/307497/gnome-disable-sleep-on-lid-close
# https://unix.stackexchange.com/questions/389603/how-to-ignore-lid-switch-action
# https://dev1galaxy.org/viewtopic.php?id=2021

set -e

devuan_logind_path=/etc/elogind/logind.conf
debian_logind_path=/etc/systemd/logind.conf

if test "`id -u`" != 0; then
  if which sudo 2>/dev/null 1>&2; then
    echo "This needs to be run as root, trying sudo" 1>&2
    exec sudo sh -x "$0" "$@"
  else
    echo "This needs to be run as root" 1>&2
    exit 2
  fi
fi

done=false

if test -f /proc/acpi/wakeup; then
  dev=$(grep ^LID /proc/acpi/wakeup |awk '{print $4}' |sed -e s/platform://)
  mkdir -p /etc/boot.d
  cat <<-EOT >/etc/boot.d/disable-lid-switch
#!/bin/sh
echo $dev |tee /sys/bus/acpi/drivers/button/unbind
EOT
  chmod +x /etc/boot.d/disable-lid-switch
  # This command will fail on second and subsequent invocations for the same
  # device, even though the device remains shown as "enabled" in
  # /proc/acpi/wakeup.
  # It'll succeed on the first invocation since boot.
  /etc/boot.d/disable-lid-switch || true
fi

if test -f $devuan_logind_path; then
  logind_path=$devuan_logind_path
elif test -f $debian_logind_path; then
  logind_path=$debian_logind_path
else
  logind_path=
fi

if test -n "$logind_path"; then
  sed -i -e '/^HandleLidSwitch/s/^/#/' -e 's/^\[Login]$/[Login]'"\n"'HandleLidSwitch=ignore/' $logind_path
  sed -i -e '/^HandleLidSwitchDocked/s/^/#/' -e 's/^\[Login]$/[Login]'"\n"'HandleLidSwitchDocked=ignore/' $logind_path
  done=true
fi

if which systemctl >/dev/null 2>&1; then
  systemctl mask sleep.target suspend.target
  done=true
fi

if which systemctl >/dev/null 2>&1; then
  systemctl mask sleep.target suspend.target
  done=true
fi

if ! $done; then
  echo "Unknown system" 1>&2
  exit 2
fi
