#!/usr/bin/env ruby

# reduce password delay to a manageable level
# https://unix.stackexchange.com/questions/2126/why-is-there-a-big-delay-after-entering-a-wrong-password
# https://askubuntu.com/questions/877385/how-can-i-lower-the-delay-after-incorrectly-entered-login-and-sudo-passwords

# It seems that the order of lines in pam configuration matters, therefore
# perform replacements inline.

autoload :FileUtils, 'fileutils'

def edit_file(path)
  stat = File.stat(path)
  contents = File.read(path)
  modified = yield contents
  File.open(part_path = path + '.part', 'w', stat.mode) do |f|
    f << modified
  end
  FileUtils.chmod(stat.mode, part_path)
  FileUtils.chown(stat.uid, stat.gid, part_path)
  FileUtils.mv(path, path + '.bak')
  FileUtils.mv(part_path, path)
end

PAM_DIR = '/etc/pam.d'
Dir.children(PAM_DIR).each do |basename|
  path = File.join(PAM_DIR, basename)
  edit_file(path) do |contents|
    lines = contents.split("\n").map do |line|
      if !line.start_with?('#')
        if line =~ /\bpam_unix\.so\b/
          pre, options = line.split('pam_unix.so')
          options = if options
            options.split(/\s+/)
          else
            []
          end
          options << 'nodelay'
          options.uniq!
          line = "#{pre}pam_unix.so #{options.join(' ')}"
        elsif line =~ /^auth\s+optional\s+pam_faildelay.so/
          line = "##{line}"
        end
      end
      line
    end
    lines.join("\n")
  end
end

delay = if value = ARGV.shift
  Float(value)
else
  0.2
end

edit_file('/etc/pam.d/common-auth') do |contents|
  delay_us = (delay * 1_000_000).round
  if delay_us <= 0
    delay_us = 1
   end
  "auth       optional   pam_faildelay.so  delay=#{delay_us}\n#{contents}"
end

edit_file('/etc/login.defs') do |contents|
  lines = contents.split("\n").map do |line|
    if line =~ /^FAIL_DELAY=/
      line = "##{line}"
    end
    line
  end
  lines << "FAIL_DELAY=0"
  lines.join("\n")
end
