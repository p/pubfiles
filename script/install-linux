#!/bin/sh

set -e

if test "`id -u`" != 0; then
  if which sudo 2>/dev/null 1>&2; then
    echo "This needs to be run as root, trying sudo" 1>&2
    exec sudo sh -x "$0" "$@"
  else
    echo "This needs to be run as root" 1>&2
    exit 2
  fi
fi

if echo "$0" |grep -q /; then
  BASE=`dirname "$0"`
else
  echo "Cannot determine base directory" 1>&2
  exit 2
fi

. $BASE/common.sh

echo Installing for:
echo Headful: `is_headful; yesno $?`
echo Multimedia: `install_mm; yesno $?`

echo Press any key to continue
read a

install_sources() {
  sources_list_src="$1"
  sources_list_dest=/etc/apt/sources.list
  if ! test -e $sources_list_dest; then
    install -m 644 $sources_list_src $sources_list_dest
    apt-get update
  elif ! diff -q $sources_list_src /etc/apt/sources.list; then
    backup_path=$sources_list_dest.`date +%Y%m%d`
    if test -e $backup_path; then
      echo $backup_path already exists, aborting 1>&2
      exit 2
    fi
    mv /etc/apt/sources.list $backup_path
    install -m 644 $sources_list_src $sources_list_dest
    apt-get update
  fi
}

if test -f /etc/setup.conf; then
  release=`cat /etc/setup.conf |grep ^release= |awk -F= '{print $2}'`
fi
if test -z "$release"; then
  release=testing
fi

if is_devuan; then
 install_sources $BASE/../config/apt/devuan/$release/sources.list
elif is_debian && ! is_ubuntu; then
 install_sources $BASE/../config/apt/debian/$release/sources.list
fi

apt-get install -y python-pip || apt-get install -y python3-pip

if ! is_aws; then
  install_if_needed smartmontools
fi

install_if_needed \
  openntpd openssh-server \
  zsh sudo man-db dnsutils \
  git curl make gcc \
  zip unzip net-tools rsync tmux

# chromium is no longer here - use ungoogled-chromium
if is_headful; then
  install_if_needed \
    gitk libvte9 scite feh \
    xpdf evince \
    xinit xauth openbox xscreensaver x11-xserver-utils \
    xfonts-terminus

  if install_mm; then
    install_if_needed mplayer alsa-utils youtube-dl
  fi

  if is_ubuntu; then
    install_if_needed firefox
  else
    install_if_needed firefox-esr
  fi
fi

if lspci -v|grep -q iwlwifi && ! is_ubuntu; then
  install_if_needed firmware-iwlwifi
fi

if lspci |grep -q Radeon; then
  install_if_needed firmware-amd-graphics
fi

echo '%sudo ALL=(ALL:ALL) NOPASSWD:ALL' > /etc/sudoers.d/sudo-group
chmod 0400 /etc/sudoers.d/sudo-group

install_if_needed nvi
update-alternatives --set editor /usr/bin/nvi
update-alternatives --set vi /usr/bin/nvi

chsh -s /bin/zsh root
if test "`id -u`" = 0 && test -n "$SUDO_USER"; then
  user=$SUDO_USER
elif test "`id -u`" != 0; then
  chsh -s /bin/zsh `id -un`
fi

if have_user me; then
  chsh -s /bin/zsh me
  usermod -a -G sudo me
fi

if have_user w; then
  chsh -s /bin/zsh w
fi

install_if_needed hdparm lm-sensors sysstat usbutils pciutils

if ! grep -q '^apm = 255' /etc/hdparm.conf; then
  sed -i -e s/'^apm =/#apm =/' /etc/hdparm.conf
  echo apm = 255 |tee -a /etc/hdparm.conf
fi

if is_laptop; then
  install_if_needed \
    acpi pm-utils wireless-tools rfkill wpasupplicant \
    nfs-common

  if lspci |grep -q 'Intel.*PRO/Wireless.*AGN'; then
    install_if_needed firmware-iwlwifi
  fi

  if ! grep -q '^spindown_time = 255' /etc/hdparm.conf; then
    sed -i -e s/'^spindown_time =/#spindown_time =/' /etc/hdparm.conf
    echo spindown_time = 255 |tee -a /etc/hdparm.conf
  fi
  
  echo '/dev/sda { }' |tee -a /etc/hdparm.conf
fi

if false; then
  # Disable shared library warnings on current devuan
  # https://unix.stackexchange.com/questions/522459/how-can-i-get-these-dialogs-informing-me-that-i-need-to-restart-to-stop-popping
  if test -f /etc/needrestart/notify.conf; then
    echo "NR_NOTIFYD_DISABLE_NOTIFY_SEND='1'" |tee -a /etc/needrestart/notify.conf
  fi
fi

for f in 200-write 400-notify-send; do
  if test -f /etc/needrestart/notify.d/$f; then
    chmod -x /etc/needrestart/notify.d/$f
  fi
done

# disable beep
# https://linuxconfig.org/turn-off-beep-bell-on-linux-terminal
echo 'blacklist pcspkr' >> /etc/modprobe.d/blacklist.conf

if is_laptop; then
  "$(dirname $0)"/disable-lid-suspend
fi

if test -f /usr/bin/gtkterm2; then
  update-alternatives --set x-terminal-emulator /usr/bin/gtkterm2
fi

"$(dirname $0)"/configure-password-delay

# https://www.tecmint.com/set-system-locales-in-linux/
if have update-locale; then
  update-locale LC_ALL=C.UTF-8
fi
if false && have localectl; then
  localectl set-locale LANG=C.UTF-8
fi

if is_laptop; then
  # https://wiki.archlinux.org/index.php/Fan_speed_control
  modprobe thinkpad_acpi fan_control=1
  if test -f /sys/devices/platform/thinkpad_acpi/rfkill; then
    echo options thinkpad_acpi fan_control=1 |tee /etc/modprobe.d/thinkpad_acpi.conf
  fi
fi

# sensors
# echo level 4 > /proc/acpi/ibm/fan

# See also:
# https://unix.stackexchange.com/questions/536043/fan-constantly-running-at-full-speed
# https://github.com/vmatare/thinkfan/
# https://askubuntu.com/questions/1166057/fan-constantly-running-at-full-speed
# https://bbs.archlinux.org/viewtopic.php?id=122412

openntpd -ss

echo 'Run sensors-detect if you haven'"'"'t to load kernel modules for hardware sersors.'
