#!/usr/bin/env python3

# Inspiration: https://github.com/dmelo/vswm

import sys, subprocess, re, os, os.path, time as _time, json

spec = sys.argv[1:]
if len(spec) != 1 and len(spec) != 2:
    print('Takes ssid or ssid & password')
    exit(3)

def identify_interfaces():
    wireless = []
    dev_null = open('/dev/null', 'w')
    try:
        output = subprocess.check_output(['/sbin/iwconfig'], stderr=dev_null).decode()
    finally:
        dev_null.close()
    for line in output.split('\n'):
        match = re.match(r'(\w+)\s+IEEE 802.11', line)
        if match:
            wireless.append(match.group(1))
    output = subprocess.check_output(['ip', 'a']).decode()
    wired = []
    for line in output.split("\n"):
        match = re.match(r'\d+: (\w+):', line)
        if match:
            interface_name = match.group(1)
            type = None
        match = re.match(r'\s+link/(\w+)', line)
        if match:
            type = match.group(1)
            if type == 'ether' and interface_name not in wireless:
                wired.append(interface_name)
    return dict(wired=wired, wireless=wireless)

def get_if_ip(ifname):
    output = subprocess.check_output(['/sbin/ifconfig', ifname]).decode()
    match = re.search(r'inet (\S+)', output)
    if not match:
        raise Exception('not found')
    return match.group(1)

def get_default_gateway():
    output = subprocess.check_output(['netstat', '-rn']).decode()
    for line in output.split("\n"):
        if line.startswith('0.0.0.0'):
            gw = re.split(r'\s+', line)[1]
            return gw
    raise 'No default gateway'

for process in ['ifdown', 'ifup', 'dhclient', 'wpa_supplicant']:
    subprocess.call(['pkill', '-9', process])

interfaces = identify_interfaces()
wireless_interface = interfaces['wireless'][0]

contents = 'iface %s inet dhcp\n' % wireless_interface
if len(spec) == 1:
    contents += '  wireless-essid %s' % spec[0]
else:
    contents += '  wpa-ssid "%s"\n  wpa-psk "%s"\n' % tuple(spec)

with open('/etc/network/interfaces.d/%s' % wireless_interface, 'w') as f:
    f.write(contents)

contents = "ctrl_interface=/run/wpa_supplicant\n"
contents += 'network={\n  ssid="%s"' % spec[0]
if len(spec) > 1:
    contents += '\n  key_mgmt=WPA-PSK\n  psk="%s"' % spec[1]
contents += '\n}\n'

wpa_conf_path = '/etc/network/wpa_supplicant.conf.d/%s' % spec[0]
if not os.path.exists('/etc/network/wpa_supplicant.conf.d'):
    os.mkdir('/etc/network/wpa_supplicant.conf.d')
with open(wpa_conf_path, 'w') as f:
    f.write(contents)

for interface in interfaces['wired']:
    subprocess.call(['ifdown', interface])
subprocess.call(['ifdown', wireless_interface])
_time.sleep(1)
subprocess.check_call(['iwconfig', wireless_interface, 'essid', spec[0]])
print('Starting wpa_supplicant')
subprocess.check_call(['wpa_supplicant', '-B',
    '-D', 'nl80211,wext',
    '-i', wireless_interface,
    '-f', '/tmp/wpa_supplicant.log',
    '-c', wpa_conf_path])
os.chmod('/tmp/wpa_supplicant.log', 0o644)
print('Running dhclient')
subprocess.check_call(['dhclient', '-v', wireless_interface])

if not os.path.exists('/run/wireless'):
    os.mkdir('/run/wireless')

config = {
    'network': spec[0],
    'password': spec[1],
    'interface': wireless_interface,
    'ip': get_if_ip(wireless_interface),
    'gateway': get_default_gateway(),
}
    
with open('/run/wireless/config.json', 'w') as f:
    json.dump(config, f)
