#!/usr/bin/env ruby

require 'yaml'

disks = Dir['/dev/sd?'].sort
disk_infos = {}
disks.each do |disk|
  parts = Dir["#{disk}?"].sort
  status = `fdisk -l #{disk}`
  size = "#{status.split(/\s+/)[2]} #{status.split(/\s+/)[3].sub(',', '')}"
  if status =~ /Disk model: ([^\n]+)/
    model = $1
  end
  part_infos = {}
  parts.each do |part|
    status = `fdisk -l #{part}`
    part_size = "#{status.split(/\s+/)[2]} #{status.split(/\s+/)[3].sub(',', '')}"
    part_infos[part] = {size: part_size}
  end
  status = `smartctl -a #{disk}`
  if status =~ /Serial [nN]umber:\s+(\S+)/
    serial = $1
  end
  disk_infos[disk] = {
    parts: parts,
    size: size,
    part_infos: part_infos,
    model: model,
    serial: serial,
  }
end

dms = Dir['/dev/mapper/*'].sort
dm_infos = {}
dms.each do |dm|
  next if File.basename(dm) == 'control'
  status = `cryptsetup status #{dm}`
  if status =~ /device:\s+(\S+)/
    device = $1
  else
    raise "cryptsetup failed for #{dm}"
  end
  status = `blkid #{dm}`
  if status =~ /LABEL="([^"]+)/
    label = $1
  end

  dm_infos[dm] = {
    device: device,
    label: label,
  }
  disk_infos[device[...-1]][:part_infos][device].update(
    mapper: dm, mapper_label: label)
end

disk_infos.each do |disk, di|
  puts "#{File.basename(disk)}    #{'%10s' % di[:size]}  #{di[:model]} Serial: #{di[:serial]}"
  di[:part_infos].each do |part, pi|
    puts "  #{File.basename(part)} #{'%10s' % pi[:size]}"
  end
end

#puts disk_infos.to_yaml
