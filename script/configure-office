#!/usr/bin/env ruby

require 'nokogiri'
autoload :FileUtils, 'fileutils'

class OfficeConfigurator
  BASE_CONTENTS = <<-EOT
<?xml version="1.0" encoding="UTF-8"?>
<oor:items xmlns:oor="http://openoffice.org/2001/registry" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<item oor:path="/org.openoffice.Office.Common/Misc"><prop oor:name="FirstRun" oor:op="fuse"><value>false</value></prop></item>
<item oor:path="/org.openoffice.Office.Common/Misc"><prop oor:name="ShowTipOfTheDay" oor:op="fuse"><value>false</value></prop></item>
<!-- Autocompletion in calc -->
<!-- https://ask.libreoffice.org/t/how-can-i-disable-autocomplete-in-calc/7441 -->
<item oor:path="/org.openoffice.Office.Calc/Input"><prop oor:name="AutoInput" oor:op="fuse"><value>false</value></prop></item>
</oor:items>
EOT

  SETTINGS = [
    ["/org.openoffice.Office.Common/Misc", 'ShowTipOfTheDay', 'false'],
    ["/org.openoffice.Office.Calc/Input", 'AutoInput', 'false'],
  ]

  # Possibly XDG_HOME should be taken into account here?
  def config_path
    File.expand_path('~/.config/libreoffice/4/user/registrymodifications.xcu')
  end

  def run
    if File.exist?(config_path)
      warn "Modifying #{config_path}"

      doc = Nokogiri::XML(File.read(config_path))

      SETTINGS.each do |setting_path, setting_name, new_value|
        found = false
        doc.xpath(%Q,//oor:items/item/prop[@oor:name="#{setting_name}"],).each do |prop|
          found = true
          prop.xpath('value').children.first.content = new_value
        end

        unless found
          item = Nokogiri::XML::DocumentFragment.parse(%Q~
            <item oor:path="#{setting_path}">
              <prop oor:name="#{setting_name}" oor:op="fuse">
                <value>#{new_value}</value></prop></item>
            ~)
          doc.xpath('//oor:items').first << item
        end
      end

      File.open(config_path, 'w') do |f|
        f << doc.to_s
      end
    else
      warn "Creating #{config_path}"

      FileUtils.mkdir_p(File.dirname(config_path))
      File.open(config_path, 'w') do |f|
        f << BASE_CONTENTS
      end
    end
  end
end

if __FILE__ == $0
  OfficeConfigurator.new.run
end
