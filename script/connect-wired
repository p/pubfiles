#!/usr/bin/env python

import sys, subprocess, re

def identify_interfaces():
    wireless = []
    dev_null = open('/dev/null', 'w')
    try:
        output = subprocess.check_output(['/sbin/iwconfig'], stderr=dev_null)
    finally:
        dev_null.close()
    for line in output.split('\n'):
        match = re.match(r'(\w+)\s+IEEE 802.11', line)
        if match:
            wireless.append(match.group(1))
    output = subprocess.check_output(['ip', 'a'])
    wired = []
    for line in output.split("\n"):
        #print(line)
        match = re.match(r'\d+: (\w+):', line)
        if match:
            interface_name = match.group(1)
            type = None
        match = re.match(r'\s+link/(\w+)', line)
        if match:
            type = match.group(1)
            if type == 'ether' and interface_name not in wireless:
                wired.append(interface_name)
    return dict(wired=wired, wireless=wireless)

subprocess.call(['pkill', '-9', 'ifdown'])
subprocess.call(['pkill', '-9', 'ifup'])

interfaces = identify_interfaces()
wired_interface = interfaces['wired'][0]

contents = 'iface %s inet dhcp\n' % wired_interface

with open('/etc/network/interfaces.d/%s' % wired_interface, 'w') as f:
    f.write(contents)

for interface in interfaces['wireless']:
    subprocess.call(['ifdown', interface])
subprocess.call(['pkill', '-9', 'ifup'])
subprocess.call(['pkill', '-9', 'ifdown'])
subprocess.call(['ifdown', wired_interface])
subprocess.check_call(['ifup', wired_interface])
