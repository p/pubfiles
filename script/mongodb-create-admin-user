#!/usr/bin/env ruby

require 'optparse'
require 'mongo'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: mongodb-create-admin-user [options]"

  opts.on("-u", "--user=USER", "User name (default: admin)") do |v|
    options[:user] = v
  end
  opts.on("-p", "--password=PASSWORD", "Password") do |v|
    options[:password] = v
  end

  opts.on("-l", "--list-users", "List existing users") do
    options[:list_users] = true
  end
end.parse!

if options[:list_users]
  # Do not default user here
  client = Mongo::Client.new(%w'localhost',
    user: options[:user], password: options[:password])
  pp client.database.command(usersInfo: 1).first
  exit
end

username = options[:user] || 'admin'
password = options[:password]

raise "Usage: #{$0} username password" unless password

client = Mongo::Client.new(%w'localhost', user: username, password: password)

begin
  client.command(ping: 1)
rescue Mongo::Auth::Unauthorized => exc
  if exc.message !~ /AuthenticationFailed/
    raise
  end

  # Continue with adding the user
else
  puts "User #{username} appears to already exist with the specified password - doing nothing"
  exit
end

client.close

client = Mongo::Client.new(%w'localhost')

client.use('admin')
begin
  client.database.users.create(
      username,
      password: password,
      roles: [
        { role: "userAdminAnyDatabase", db: "admin" },
        { role: "readWriteAnyDatabase", db: "admin" },
      ],
  )
rescue Mongo::Error => exc
  if exc.message =~ /User.*already exists/
    STDERR.puts "User #{username} appears to already exist but with a different password"
    exit 1
  end

  raise
end

puts "User #{username} created successfully"
